// Code generated by goctl. DO NOT EDIT.
package types

import "time"

type CommonResult struct {
	Code   int         `json:"code"`
	Result interface{} `json:"result"`
	Msg    string      `json:"msg"`
}

type GetRequest struct {
	Id int `path:"id"`
}


// RoomDoc ルームの入室状況
type RoomDoc struct {
	Seats []Seat `json:"seats" firestore:"seats"`
}

func NewRoomDoc() RoomDoc {
	return RoomDoc{
		Seats: []Seat{}, // 席情報の配列
	}
}

type Seat struct {
	SeatId          int       `json:"seat_id"`           //座位编号
	UserId          string    `json:"user_id"`           //用户ID
	UserDisplayName string    `json:"user_display_name"` //显示用户名
	WorkName        string    `json:"work_name"`         //工作名称
	EnteredAt       time.Time `json:"entered_at"`        //入住时间
	Until           time.Time `json:"until"`             //自动退房预定时间
	ColorCode       string    `json:"color_code"`        //座位背景色的彩色编码
}

type User struct {
	gorm.id

	DailyTotalStudySec int       `json:"daily_total_study_sec"` //当天的累计作业时间
	TotalStudySec      int       `json:"total_study_sec"`       //累计作业时间
	RegistrationDate   time.Time `json:"registration_date"`     //登记日期
	LastEntered        time.Time `json:"last_entered"`          //上次入住时间
	LastExited         time.Time `json:"last_exited"`           //上次退房时间
	RankVisible        bool      `json:"rank_visible"`          //是否显示等级
}

type UserHistoryDoc struct {
	Action  string      `json:"action" firestore:"action"`
	Date    time.Time   `json:"date" firestore:"date"`
	Details interface{} `json:"details" firestore:"details"`
}
